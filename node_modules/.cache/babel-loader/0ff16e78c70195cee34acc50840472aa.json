{"ast":null,"code":"var _jsxFileName = \"/home/codingtux/Documents/Project/tic-tac-tao/src/components/TaskCards.jsx\";\nimport React from 'react';\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\n\nconst TaskCards = props => {\n  this.state = {\n    randomColor: String\n  };\n\n  getRandomColor = () => {\n    return Math.floor(Math.random() * Math.floor(999));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Card, {\n    body: true,\n    inverse: true,\n    color: \"#\" + toString(this.getRandomColor),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Special Title Treatment\"), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"With supporting text below as a natural lead-in to additional content.\"), React.createElement(Button, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Button\"), React.createElement(Button, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Button\")));\n};\n\nexport default TaskCards;","map":{"version":3,"sources":["/home/codingtux/Documents/Project/tic-tac-tao/src/components/TaskCards.jsx"],"names":["React","Card","Button","CardTitle","CardText","TaskCards","props","state","randomColor","String","getRandomColor","Math","floor","random","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAkD,YAAlD;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,OAAKC,KAAL,GAAa;AACTC,IAAAA,WAAW,EAAEC;AADJ,GAAb;;AAIAC,EAAAA,cAAc,GAAG,MAAM;AACnB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,GAAX,CAA3B,CAAP;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,OAAO,MAAlB;AAAmB,IAAA,KAAK,EAAG,MAAME,QAAQ,CAAC,KAAKJ,cAAN,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,EAEA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAFA,EAGA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,EAIA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,CADJ,CADJ;AAUH,CApBD;;AAsBA,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\n\nconst TaskCards = (props) => {\n\n    this.state = {\n        randomColor: String\n    }\n\n    getRandomColor = () => {\n        return Math.floor(Math.random() * Math.floor(999))\n    }\n\n    return (\n        <div>\n            <Card body inverse color={ \"#\" + toString(this.getRandomColor)}>\n            <CardTitle>Special Title Treatment</CardTitle>\n            <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n            <Button color=\"secondary\">Button</Button>\n            <Button color=\"secondary\">Button</Button>\n            </Card>\n        </div>\n  );\n};\n\nexport default TaskCards;"]},"metadata":{},"sourceType":"module"}