{"ast":null,"code":"var _jsxFileName = \"/home/codingtux/Documents/Project/tic-tac-tao/src/components/TaskCards.jsx\";\nimport React from 'react';\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\n\nconst TaskCards = props => {\n  function getRandomColor() {\n    const min = 1;\n    const max = 999;\n    const rand = min + Math.random() * (max - min);\n    return rand;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Card, {\n    body: true,\n    inverse: true,\n    color: \"#\" + toString(getRandomColor()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Special Title Treatment\"), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"With supporting text below as a natural lead-in to additional content.\"), React.createElement(Button, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Button\"), React.createElement(Button, {\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Button\")));\n};\n\nexport default TaskCards;","map":{"version":3,"sources":["/home/codingtux/Documents/Project/tic-tac-tao/src/components/TaskCards.jsx"],"names":["React","Card","Button","CardTitle","CardText","TaskCards","props","getRandomColor","min","max","rand","Math","random","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAkD,YAAlD;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAIzB,WAASC,cAAT,GAAyB;AACrB,UAAMC,GAAG,GAAG,CAAZ;AACJ,UAAMC,GAAG,GAAG,GAAZ;AACA,UAAMC,IAAI,GAAGF,GAAG,GAAGG,IAAI,CAACC,MAAL,MAAiBH,GAAG,GAAGD,GAAvB,CAAnB;AACA,WAAOE,IAAP;AAEC;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,OAAO,MAAlB;AAAmB,IAAA,KAAK,EAAG,MAAMG,QAAQ,CAACN,cAAc,EAAf,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,EAEA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAFA,EAGA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,EAIA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,CADJ,CADJ;AAUH,CAtBD;;AAwBA,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport { Card, Button, CardTitle, CardText } from 'reactstrap';\n\nconst TaskCards = (props) => {\n\n  \n\n    function getRandomColor(){\n        const min = 1;\n    const max = 999;\n    const rand = min + Math.random() * (max - min);\n    return rand;\n \n    }\n\n    return (\n        <div>\n            <Card body inverse color={ \"#\" + toString(getRandomColor())}>\n            <CardTitle>Special Title Treatment</CardTitle>\n            <CardText>With supporting text below as a natural lead-in to additional content.</CardText>\n            <Button color=\"secondary\">Button</Button>\n            <Button color=\"secondary\">Button</Button>\n            </Card>\n        </div>\n  );\n};\n\nexport default TaskCards;"]},"metadata":{},"sourceType":"module"}